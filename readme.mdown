## 色彩变换

这是一份中山大学医学图像处理课程实验报告，描述《数字图像处理》[实验手册][lab]中06-01到06-04项目。

*   本次实验所有相关的函数都封装在[`clrman::`][clrman.cpp]下，`main.cpp`里只是对这些子函数做了简单调用，其他文件与本实验无关，可以直接阅读[`corman.cpp`][clrman.cpp]里边的代码。
*   `.pro`文件里边的windows下配置需要修改才能运行哦。

### 项目06-01：色彩转换-RGB图片转换成“网络安全色彩”（Web safe color）

程序非常简单，请直接参考[`void cvtToWebSafe(Mat&, Mat&)`][cvtToWebSafe]子函数。效果如下：

原图片：

![原图片](WebSafeTarget.png)

转换成Web safe color：

![安全颜色](WebSafeColorResult.png)

转换成web safe color后出现色块的问题：
每两个相邻色块只在一个颜色分量上相差51，这51的差距造成的色差导致颜色的不均一，在安全色下是找不到过渡色的，所以色块的问题无法避免的。

### 项目06-02：伪彩色
转换成伪彩色的函数是`pseudoColor`
本实验中伪彩色算法中使用的映射关系由以下两张图表示：

黑白渐变：

![黑白渐变](gradBW.png)

伪彩映射：

![映射关系](pseudoColorMap.png)

原图：

![washinton](washinton.png)

实际转换效果如下：

![pseudoResult](pseudoResult.png)

### 项目06-03：直方图均衡
程序参考[这篇文章](http://opencv-srf.blogspot.com/2013/08/histogram-equalization.html)。
对图片做直方图均衡的函数是`histoEqualSep`以及`histoEqual`，前者对RGB三个通道分别做直方图均衡，后者将图片转化至YUV空间，只对Y通道做直方图均衡，保护了色相信息。

代码简单易懂请直接阅读。这里只给出运行结果：

原图：

![original image](rgbImage.png)

RGB通道分别做直方图均衡后：

![histogram equalization result](histoResult.png)

对Y通道做直方图均衡后：

![Y channel histogram equalization](histoResult2.png)

关于YUV下直方图均衡：

Y的生成是RGB的某种加权平均（根据YUV标准有别），权重的设置是为了黑白（电视）显示下对人眼的友好。在Y通道下做均衡就是RGB的这种加权取平均后的均衡，与实验手册中第二问结果确实不一样但是想法是类似的。如果希望实现实验手册中第二问，可以将RGB三个通道相加取平均，再按照单通道的方法进行直方图均衡。

[clrman.cpp]:https://github.com/kkcocogogo/Color-Manipulation/blob/master/clrman.cpp
[lab]:https://onedrive.live.com/redir?resid=73E70F9DE102435A%212874
[cvtToWebSafe]:https://github.com/kkcocogogo/Basic-Color-Manipulation/blob/master/cvtToWebSafe.cpp

